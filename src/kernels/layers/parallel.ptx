//
// Generated by NVIDIA NVVM Compiler
//
// Compiler Build ID: CL-36037853
// Cuda compilation tools, release 12.9, V12.9.86
// Based on NVVM 7.0.1
//

.version 8.8
.target sm_52
.address_size 64

	// .globl	duplicate_input

.visible .entry duplicate_input(
	.param .u64 duplicate_input_param_0,
	.param .u64 duplicate_input_param_1,
	.param .u64 duplicate_input_param_2,
	.param .u32 duplicate_input_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [duplicate_input_param_0];
	ld.param.u64 	%rd2, [duplicate_input_param_1];
	ld.param.u64 	%rd3, [duplicate_input_param_2];
	ld.param.u32 	%r2, [duplicate_input_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB0_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	ld.global.f32 	%f1, [%rd6];
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	st.global.f32 	[%rd8], %f1;
	ld.global.f32 	%f2, [%rd6];
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f2;

$L__BB0_2:
	ret;

}
	// .globl	concat
.visible .entry concat(
	.param .u64 concat_param_0,
	.param .u64 concat_param_1,
	.param .u64 concat_param_2,
	.param .u32 concat_param_3,
	.param .u32 concat_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<3>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd3, [concat_param_0];
	ld.param.u64 	%rd4, [concat_param_1];
	ld.param.u64 	%rd5, [concat_param_2];
	ld.param.u32 	%r2, [concat_param_3];
	ld.param.u32 	%r3, [concat_param_4];
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r6;
	add.s32 	%r7, %r3, %r2;
	setp.ge.u32 	%p1, %r1, %r7;
	@%p1 bra 	$L__BB1_4;

	setp.lt.u32 	%p2, %r1, %r2;
	cvt.s64.s32 	%rd1, %r1;
	cvta.to.global.u64 	%rd6, %rd5;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd2, %rd6, %rd7;
	@%p2 bra 	$L__BB1_3;
	bra.uni 	$L__BB1_2;

$L__BB1_3:
	cvta.to.global.u64 	%rd11, %rd3;
	shl.b64 	%rd12, %rd1, 2;
	add.s64 	%rd13, %rd11, %rd12;
	ld.global.f32 	%f2, [%rd13];
	st.global.f32 	[%rd2], %f2;
	bra.uni 	$L__BB1_4;

$L__BB1_2:
	sub.s32 	%r8, %r1, %r2;
	cvta.to.global.u64 	%rd8, %rd4;
	mul.wide.u32 	%rd9, %r8, 4;
	add.s64 	%rd10, %rd8, %rd9;
	ld.global.f32 	%f1, [%rd10];
	st.global.f32 	[%rd2], %f1;

$L__BB1_4:
	ret;

}
	// .globl	split
.visible .entry split(
	.param .u64 split_param_0,
	.param .u64 split_param_1,
	.param .u64 split_param_2,
	.param .u32 split_param_3,
	.param .u32 split_param_4
)
{
	.reg .pred 	%p<3>;
	.reg .f32 	%f<2>;
	.reg .b32 	%r<9>;
	.reg .b64 	%rd<14>;


	ld.param.u64 	%rd2, [split_param_0];
	ld.param.u64 	%rd3, [split_param_1];
	ld.param.u64 	%rd4, [split_param_2];
	ld.param.u32 	%r2, [split_param_3];
	ld.param.u32 	%r3, [split_param_4];
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %ctaid.x;
	mov.u32 	%r6, %tid.x;
	mad.lo.s32 	%r1, %r5, %r4, %r6;
	add.s32 	%r7, %r3, %r2;
	setp.ge.u32 	%p1, %r1, %r7;
	@%p1 bra 	$L__BB2_4;

	cvta.to.global.u64 	%rd5, %rd2;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd6, %r1, 4;
	add.s64 	%rd7, %rd5, %rd6;
	ld.global.f32 	%f1, [%rd7];
	setp.lt.u32 	%p2, %r1, %r2;
	@%p2 bra 	$L__BB2_3;
	bra.uni 	$L__BB2_2;

$L__BB2_3:
	cvta.to.global.u64 	%rd11, %rd3;
	shl.b64 	%rd12, %rd1, 2;
	add.s64 	%rd13, %rd11, %rd12;
	st.global.f32 	[%rd13], %f1;
	bra.uni 	$L__BB2_4;

$L__BB2_2:
	sub.s32 	%r8, %r1, %r2;
	cvta.to.global.u64 	%rd8, %rd4;
	mul.wide.u32 	%rd9, %r8, 4;
	add.s64 	%rd10, %rd8, %rd9;
	st.global.f32 	[%rd10], %f1;

$L__BB2_4:
	ret;

}
	// .globl	element_wise_add
.visible .entry element_wise_add(
	.param .u64 element_wise_add_param_0,
	.param .u64 element_wise_add_param_1,
	.param .u64 element_wise_add_param_2,
	.param .u32 element_wise_add_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [element_wise_add_param_0];
	ld.param.u64 	%rd2, [element_wise_add_param_1];
	ld.param.u64 	%rd3, [element_wise_add_param_2];
	ld.param.u32 	%r2, [element_wise_add_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB3_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	add.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB3_2:
	ret;

}
	// .globl	element_wise_multiply
.visible .entry element_wise_multiply(
	.param .u64 element_wise_multiply_param_0,
	.param .u64 element_wise_multiply_param_1,
	.param .u64 element_wise_multiply_param_2,
	.param .u32 element_wise_multiply_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [element_wise_multiply_param_0];
	ld.param.u64 	%rd2, [element_wise_multiply_param_1];
	ld.param.u64 	%rd3, [element_wise_multiply_param_2];
	ld.param.u32 	%r2, [element_wise_multiply_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB4_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB4_2:
	ret;

}
	// .globl	element_wise_max
.visible .entry element_wise_max(
	.param .u64 element_wise_max_param_0,
	.param .u64 element_wise_max_param_1,
	.param .u64 element_wise_max_param_2,
	.param .u32 element_wise_max_param_3
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<4>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<11>;


	ld.param.u64 	%rd1, [element_wise_max_param_0];
	ld.param.u64 	%rd2, [element_wise_max_param_1];
	ld.param.u64 	%rd3, [element_wise_max_param_2];
	ld.param.u32 	%r2, [element_wise_max_param_3];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB5_2;

	cvta.to.global.u64 	%rd4, %rd1;
	mul.wide.s32 	%rd5, %r1, 4;
	add.s64 	%rd6, %rd4, %rd5;
	cvta.to.global.u64 	%rd7, %rd2;
	add.s64 	%rd8, %rd7, %rd5;
	ld.global.f32 	%f1, [%rd8];
	ld.global.f32 	%f2, [%rd6];
	max.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd5;
	st.global.f32 	[%rd10], %f3;

$L__BB5_2:
	ret;

}
	// .globl	multiply_gradient_distribution
.visible .entry multiply_gradient_distribution(
	.param .u64 multiply_gradient_distribution_param_0,
	.param .u64 multiply_gradient_distribution_param_1,
	.param .u64 multiply_gradient_distribution_param_2,
	.param .u64 multiply_gradient_distribution_param_3,
	.param .u64 multiply_gradient_distribution_param_4,
	.param .u32 multiply_gradient_distribution_param_5
)
{
	.reg .pred 	%p<2>;
	.reg .f32 	%f<7>;
	.reg .b32 	%r<6>;
	.reg .b64 	%rd<17>;


	ld.param.u64 	%rd1, [multiply_gradient_distribution_param_0];
	ld.param.u64 	%rd2, [multiply_gradient_distribution_param_1];
	ld.param.u64 	%rd3, [multiply_gradient_distribution_param_2];
	ld.param.u64 	%rd4, [multiply_gradient_distribution_param_3];
	ld.param.u64 	%rd5, [multiply_gradient_distribution_param_4];
	ld.param.u32 	%r2, [multiply_gradient_distribution_param_5];
	mov.u32 	%r3, %ctaid.x;
	mov.u32 	%r4, %ntid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r3, %r4, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB6_2;

	cvta.to.global.u64 	%rd6, %rd1;
	mul.wide.s32 	%rd7, %r1, 4;
	add.s64 	%rd8, %rd6, %rd7;
	cvta.to.global.u64 	%rd9, %rd3;
	add.s64 	%rd10, %rd9, %rd7;
	ld.global.f32 	%f1, [%rd10];
	ld.global.f32 	%f2, [%rd8];
	mul.f32 	%f3, %f2, %f1;
	cvta.to.global.u64 	%rd11, %rd4;
	add.s64 	%rd12, %rd11, %rd7;
	st.global.f32 	[%rd12], %f3;
	cvta.to.global.u64 	%rd13, %rd2;
	add.s64 	%rd14, %rd13, %rd7;
	ld.global.f32 	%f4, [%rd14];
	ld.global.f32 	%f5, [%rd8];
	mul.f32 	%f6, %f5, %f4;
	cvta.to.global.u64 	%rd15, %rd5;
	add.s64 	%rd16, %rd15, %rd7;
	st.global.f32 	[%rd16], %f6;

$L__BB6_2:
	ret;

}
	// .globl	max_gradient_distribution
.visible .entry max_gradient_distribution(
	.param .u64 max_gradient_distribution_param_0,
	.param .u64 max_gradient_distribution_param_1,
	.param .u64 max_gradient_distribution_param_2,
	.param .u64 max_gradient_distribution_param_3,
	.param .u64 max_gradient_distribution_param_4,
	.param .u32 max_gradient_distribution_param_5
)
{
	.reg .pred 	%p<4>;
	.reg .f32 	%f<14>;
	.reg .b32 	%r<7>;
	.reg .b64 	%rd<19>;


	ld.param.u64 	%rd7, [max_gradient_distribution_param_0];
	ld.param.u64 	%rd8, [max_gradient_distribution_param_1];
	ld.param.u64 	%rd9, [max_gradient_distribution_param_2];
	ld.param.u64 	%rd10, [max_gradient_distribution_param_3];
	ld.param.u64 	%rd11, [max_gradient_distribution_param_4];
	ld.param.u32 	%r2, [max_gradient_distribution_param_5];
	mov.u32 	%r3, %ntid.x;
	mov.u32 	%r4, %ctaid.x;
	mov.u32 	%r5, %tid.x;
	mad.lo.s32 	%r1, %r4, %r3, %r5;
	setp.ge.u32 	%p1, %r1, %r2;
	@%p1 bra 	$L__BB7_6;

	cvta.to.global.u64 	%rd12, %rd8;
	cvt.s64.s32 	%rd1, %r1;
	mul.wide.s32 	%rd13, %r1, 4;
	add.s64 	%rd2, %rd12, %rd13;
	cvta.to.global.u64 	%rd14, %rd9;
	add.s64 	%rd3, %rd14, %rd13;
	ld.global.f32 	%f3, [%rd3];
	ld.global.f32 	%f4, [%rd2];
	setp.gt.f32 	%p2, %f4, %f3;
	cvta.to.global.u64 	%rd15, %rd10;
	add.s64 	%rd4, %rd15, %rd13;
	cvta.to.global.u64 	%rd16, %rd7;
	add.s64 	%rd5, %rd16, %rd13;
	@%p2 bra 	$L__BB7_3;
	bra.uni 	$L__BB7_2;

$L__BB7_3:
	ld.global.f32 	%f6, [%rd5];
	st.global.f32 	[%rd4], %f6;
	mov.f32 	%f13, 0f00000000;
	bra.uni 	$L__BB7_4;

$L__BB7_2:
	mov.u32 	%r6, 0;
	st.global.u32 	[%rd4], %r6;
	ld.global.f32 	%f13, [%rd5];

$L__BB7_4:
	cvta.to.global.u64 	%rd17, %rd11;
	shl.b64 	%rd18, %rd1, 2;
	add.s64 	%rd6, %rd17, %rd18;
	st.global.f32 	[%rd6], %f13;
	ld.global.f32 	%f7, [%rd3];
	ld.global.f32 	%f8, [%rd2];
	setp.neu.f32 	%p3, %f8, %f7;
	@%p3 bra 	$L__BB7_6;

	ld.global.f32 	%f9, [%rd5];
	mul.f32 	%f10, %f9, 0f3F000000;
	st.global.f32 	[%rd4], %f10;
	ld.global.f32 	%f11, [%rd5];
	mul.f32 	%f12, %f11, 0f3F000000;
	st.global.f32 	[%rd6], %f12;

$L__BB7_6:
	ret;

}

